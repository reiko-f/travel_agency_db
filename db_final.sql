-- change id data type
UPDATE INVOICE_DETAIL 
SET PACKAGE_ID =  CASE PACKAGE_ID
	WHEN 'AZ10' THEN 1
    WHEN 'AZ20' THEN 2
	WHEN 'CA01' THEN 3  
	WHEN 'CA12' THEN 4  
	WHEN 'CO08' THEN 5   
	WHEN 'CO17' THEN 6    
	WHEN 'DC09' THEN 7   
    WHEN 'FL03' THEN 8
	WHEN 'FL13' THEN 9
	WHEN 'HI07' THEN 10
	WHEN 'IL04' THEN 11
    WHEN 'MA02' THEN 12  
	WHEN 'MT16' THEN 13  
	WHEN 'NV14' THEN 14  
	WHEN 'NY05' THEN 15  
	WHEN 'TN19' THEN 16  
	WHEN 'TX06' THEN 17 
    WHEN 'UT18' THEN 18
	WHEN 'WA15' THEN 19
    WHEN 'WY11' THEN 20
    ELSE TOTAL_RENT_INCOME
    END
WHERE PACKAGE_ID IN('AZ10', 'AZ20', 'CA01', 'CA12', 'CO08', 'CO17', 'DC09', 'FL03', 'FL13', 'HI07', 'IL04', 'MA02', 'MT16', 'NV14', 'NY05', 'TN19', 'TX06', 'UT18', 'WA15', 'WY11');

-- NUM OF PACKAGE	
-- 1	2
-- 2	3
-- 3	5
-- 4	1
-- 5	5
-- 6	3
-- 7	4
-- 8	4
-- 9	3
-- 10	5
-- 11	2
-- 12	4
-- 13	1
-- 14	2
-- 15	4
-- 16	2
-- 17	4
-- 18	1
-- 19	2
-- 20	3
------
	-- 60


-- set foreign keys to invoice & invoide_detail tables
SET FOREIGN_KEY_CHECKS = 0;
ALTER TABLE `invoice` 
ADD CONSTRAINT `invoice_cust_id_fk` FOREIGN KEY (`CUST_ID`) 
REFERENCES `customer`(`CUST_ID`) ON DELETE RESTRICT ON UPDATE RESTRICT; 

SET FOREIGN_KEY_CHECKS = 0;
ALTER TABLE `invoice_detail` 
ADD CONSTRAINT `invoice_detail_cust_id_fk` FOREIGN KEY (`CUST_ID`) 
REFERENCES `customer`(`CUST_ID`) ON DELETE RESTRICT ON UPDATE RESTRICT; 


-- update
UPDATE CUSTOMER 
SET PHONE = '215-532-1969'
WHERE CUST_ID = 10;

UPDATE INVOICE
SET INVOICE_DATE = '2022-10-30'
WHERE CUST_ID = 158;


-- VIEW MEMBERS
CREATE VIEW MEMBERS AS (
	SELECT CUST_ID, FIRST_NAME, LAST_NAME, AGENT_ID, MEMBERSHIP 
    FROM CUSTOMER 
    WHERE MEMBERSHIP = 1
);

-- VIEW INVOICE_AGENT
CREATE VIEW INVOICE_AGENT AS (
    SELECT ID.INVOICE_NUM, ID.PACKAGE_ID, DESTINATION, NUMBER_OF_TOURISTS AS TOURISTS, TOTAL_PRICE, CUST_ID, ID.AGENT_ID, CONCAT(A.FIRST_NAME, ' ', A.LAST_NAME) AS AGENT_NAME
    FROM INVOICE_DETAIL AS ID, PACKAGE AS P, AGENT AS A
    WHERE ID.PACKAGE_ID = P.PACKAGE_ID AND ID.AGENT_ID = A.AGENT_ID
    ORDER BY ID.AGENT_ID, TOTAL_PRICE
);



-- PROCEDURE - GET_PACKAGE_INFO
DROP PROCEDURE IF EXISTS GET_PACKAGE_INFO
DELIMITER //
CREATE PROCEDURE GET_PACKAGE_INFO(I_PACKAGE_ID INT(3))
BEGIN
    DECLARE I_DESTINATION VARCHAR(30);
    DECLARE I_STATE VARCHAR(15);
    DECLARE I_DESCRIPTION VARCHAR(45);
    DECLARE I_CATEGORY VARCHAR(15);    
    DECLARE I_PRICE DECIMAL(7, 2);
    SELECT PACKAGE_ID, DESTINATION, STATE, DESCRIPTION, CATEGORY, PRICE
    FROM PACKAGE
    WHERE PACKAGE_ID = I_PACKAGE_ID;  
END //
DELIMITER //

CALL GET_PACKAGE_INFO(10);

-- PROCEDURE - DELETE_INVOICE
DROP PROCEDURE IF EXISTS DELETE_INVOICE
DELIMITER //
CREATE PROCEDURE DELETE_INVOICE(IN I_INVOICE_NUM INT(3))
BEGIN
    DELETE FROM INVOICE
    WHERE INVOICE_NUM = I_INVOICE_NUM;

    DELETE FROM INVOICE_DETAIL
    WHERE INVOICE_NUM = I_INVOICE_NUM;
END //
DELIMITER //

CALL DELETE_INVOICE(301);


-- TRIGGER - SET_COMMISSION
DROP PROCEDURE IF EXISTS SET_COMMISSION
DELIMITER //
CREATE TRIGGER SET_COMMISSION
	AFTER INSERT ON  INVOICE_DETAIL FOR EACH ROW
BEGIN
    UPDATE AGENT               
   	SET COMMISSION = COMMISSION + (NEW.TOTAL_PRICE * RATE)
    WHERE AGENT_ID = NEW.AGENT_ID;
END //
DELIMITER //

INSERT INTO INVOICE VALUES (201, '2022-10-31', 101);
INSERT INTO INVOICE_DETAIL VALUES (201, 8,	3, 690, 101, 2070, 6);

INSERT INTO INVOICE VALUES (301, '2022-10-31', 111);
INSERT INTO INVOICE_DETAIL VALUES (301, 19,	4, 490, 111, 1960, 6);

INSERT INTO INVOICE VALUES (501, '2022-10-31', 123);
INSERT INTO INVOICE_DETAIL VALUES (501, 20,	3, 800, 123, 2400, 6);

CALL DELETE_INVOICE(501);

INSERT INTO INVOICE VALUES (701, '2022-10-31', 222);
INSERT INTO INVOICE_DETAIL VALUES (701, 5,	2, 770, 222, 1540, 6);

-- TRIGGER - DELETE_COMMISSION
DROP PROCEDURE IF EXISTS DELETE_COMMISSION
DELIMITER //
CREATE TRIGGER DELETE_COMMISSION 
    AFTER DELETE ON INVOICE_DETAIL FOR EACH ROW 
BEGIN
    UPDATE AGENT
    SET COMMISSION = COMMISSION - (OLD.TOTAL_PRICE * RATE)
    WHERE AGENT_ID = OLD.AGENT_ID;
END //
DELIMITER //


SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'travel_agency';

SELECT SUM(TOTAL_PRICE) FROM INVOICE_DETAIL WHERE AGENT_ID = 5;

SELECT PACKAGE_ID, DESTINATION, PRICE FROM `package` WHERE PRICE > 700 AND PRICE <1000 ORDER BY PRICE;

SELECT INVOICE_NUM, CUST_ID, TOTAL_PRICE FROM INVOICE_DETAIL WHERE TOTAL_PRICE > 3000 ORDER BY TOTAL_PRICE; 

SELECT AGENT_ID, AGENT_NAME, COUNT(AGENT_ID) AS NUM_OF_CUSTOMERS FROM INVOICE_AGENT GROUP BY AGENT_ID ORDER BY AGENT_ID; 

SELECT *, DATE_ADD(INVOICE_DATE, INTERVAL 2 MONTH) AS INVOICE_DUE FROM INVOICE;

SELECT *, DATEDIFF('2022-12-31', INVOICE_DATE) AS DAYS_TO_YEAR_END FROM INVOICE WHERE INVOICE_DATE BETWEEN '2022-10-01' AND '2022-10-10'; 

SELECT INVOICE_DATE, ID.INVOICE_NUM, PACKAGE_ID, TOTAL_PRICE FROM INVOICE AS I, INVOICE_DETAIL AS ID WHERE I.INVOICE_NUM = ID.INVOICE_NUM AND INVOICE_DATE BETWEEN '2022-10-01' AND '2022-10-07' ORDER BY INVOICE_DATE, TOTAL_PRICE; 

SELECT PACKAGE_ID, DESTINATION, STATE, PRICE FROM PACKAGE WHERE STATE IN ('Florida', 'California') ORDER BY STATE, PRICE; 

SELECT ID.PACKAGE_ID, DESTINATION, COUNT(ID.PACKAGE_ID) FROM INVOICE_DETAIL AS ID, PACKAGE AS P WHERE ID.PACKAGE_ID = P.PACKAGE_ID GROUP BY ID.PACKAGE_ID; 

SELECT SUM(TOTAL_PRICE), RATE, ROUND(SUM(TOTAL_PRICE)*RATE, 2) TOTAL_MEMBER_PRICE 
FROM INVOICE_AGENT AS IA, AGENT AS A 
WHERE IA.AGENT_ID = A.AGENT_ID AND IA.AGENT_ID = 1; 

SELECT MIN(TOTAL_PRICE) AS MIN_TOTAL, MAX(TOTAL_PRICE) AS MAX_TOTAL, ROUND(AVG(TOTAL_PRICE), 2) AS AVG_TOTAL FROM INVOICE_DETAIL;

SELECT AGENT_ID, COUNT(AGENT_ID) AS CUSTOMER_PER_AGENT FROM INVOICE_DETAIL GROUP BY AGENT_ID HAVING COUNT(AGENT_ID); 

GRANT SELECT ON CUSTOMER TO REIKO ;

INSERT INTO AGENT VALUES (0, 'Jason', 'Brindle', 'jbrindle9@wired.com', '520-441-1785', 0, 0.05); 

INSERT INTO INVOICE VALUES (201, '2022-10-31', 101);

DELETE FROM CUSTOMER WHERE CUST_ID = 101;

SELECT *, PRICE*0.08 AS MEMBER_PRICE FROM PACKAGE; 

